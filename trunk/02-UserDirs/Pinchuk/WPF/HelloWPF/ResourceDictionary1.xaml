<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    
    <!--
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
-->

    <!-- Button Styles -->
    <Style x:Key="ButtonStyler" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                	<GradientStop Offset="0" Color="Black" />
                	<GradientStop Offset="1" Color="Black" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="40" />
        <Setter Property="Foreground" Value="white" />
        <Setter Property="Grid.Row" Value="2" />
        <Setter Property="Grid.Column" Value="3" />
         <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Timeline1">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.8"/>
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="1" ScaleY="1"/>
								<SkewTransform AngleX="0" AngleY="0"/>
								<RotateTransform Angle="0"/>
								<TranslateTransform X="0" Y="0"/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9" Fill="{TemplateBinding Background}" StrokeThickness="0.35">
							<Rectangle.Stroke>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0" Color="White" />
									<GradientStop Offset="1" Color="#666666" />
								</LinearGradientBrush>
							</Rectangle.Stroke>
						</Rectangle>
						<Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="Top" RadiusX="6" RadiusY="6" Opacity="1" Stroke="Transparent" Height="15px">
							<Rectangle.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0" Color="#ccffffff" />
									<GradientStop Offset="1" Color="Transparent" />
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>

						<ContentPresenter x:Name="GelButtonContent" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
					</Grid>

					<ControlTemplate.Triggers>

						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
							</Trigger.EnterActions>
							<Setter TargetName="GelBackground" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush>
										<GradientStop Offset="0.005" Color="#FF00DDFF" />
										<GradientStop Offset="1" Color="#FF1B0064" />
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="GelBackground">
								<Setter.Value>
									<RadialGradientBrush>
										<GradientStop Offset="0" Color="#ffcc00" />
										<GradientStop Offset="1" Color="#cc9900" />
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="black " />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="black " />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ForwardButton -->
    
    <Style x:Key="HelloWpf" BasedOn="{StaticResource ButtonStyler}" TargetType="{x:Type Button}">
        <Setter Property="Grid.Row" Value="2" />
        <Setter Property="Grid.Column" Value="3" />
        <Setter Property="Content" Value=">>" />
        <Setter Property="VerticalAlignment" Value="center" />
    </Style>

<!-- BackButton -->
    
    <Style x:Key="BackButton" BasedOn="{StaticResource ButtonStyler}" TargetType="{x:Type Button}">
        <Setter Property="Grid.Row" Value="2" />
        <Setter Property="Grid.Column" Value="3" />
        <Setter Property="Content" Value="&lt;&lt;" />
        <Setter Property="VerticalAlignment" Value="center" />
    </Style>

    <!-- PlayButton -->
    <!--<Style x:Key="Expander"  TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
              
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border
                Name="Border"
                Grid.Row="0"
                Background="{StaticResource HeaderBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1"
                CornerRadius="4,4,0,0" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                
                                <ToggleButton
                    Grid.Column="1"
                    IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                    OverridesDefaultStyle="True"
                    Template="{StaticResource ExpanderToggleButton}"
                    Background="{StaticResource NormalBrush}" />
                                <ContentPresenter
                    Grid.Column="0"
                    Margin="4"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border
                Name="Content"
                Grid.Row="1"
                Background="{StaticResource GroupBackgroundBrush}"
                BorderBrush="{StaticResource OpenGroupBorderBrush}"
                BorderThickness="1,0,1,1"
                CornerRadius="0,0,4,4" >
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height"
                        Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource OpenHeaderBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
</ResourceDictionary>