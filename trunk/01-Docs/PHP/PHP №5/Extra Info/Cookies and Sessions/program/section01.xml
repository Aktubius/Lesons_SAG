<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Cookies" 
предыдущий="index.xml" следующий="section02.xml">


<h1 style="COLOR: maroon">Cookies</h1>
<p>Представьте себе, что Вы создали свой сайт. И вроде бы симпатичный такой, и хорошо сделан. 
И регистрация на Вашем сайте есть, и даже общее количество посетителей можно узнать. Но Вам 
вдруг очень захотелось узнать, а сколько раз каждый из посетителей заходит на Ваш сайт, или 
проследить перемещение того или иного посетителя по сайту, или определять сразу зарегистрированных 
пользователей без проверки пароля. И так Вам это нужно, что просто без этого вся работа над 
сайтом бесполезна. В таком случае можно придумывать очень долго по ночам, как это все сделать. 
А можно использовать <EM>cookies.</EM></p>
<p>Cookies были разработаны для решения проблемы сохранения состояния между последовательными 
посещениями страницы или разных страний на одном сервере. Cookies позволяют веб-серверам 
записывать данные на жесткий диск клиента и извлекать их.</p>
<p>Cookie - это маленький текстовый файл, который содержит запись в виде пары ключ/значение, 
который постоянно хранится у клиента. Обычно они хранятся в папочке Cookies (в Windows2000 
полный путь к этой папке такой: имя_диска/Documents and Settings/имя_пользователя/Cookies).</p>
<p>В народе бытует поверье, что якобы cookies - эта такая гадость, которая может отформатировать 
жесткий диск, отправить сведения о вашей системе вражеским шпионам или другие мыслемые и 
немыслемые бяки. На самом деле это не так. Этот файл содержит в себе только то, что в этот 
файл изначально записали на сервере, и ничего кроме этого.</p>
<p>Существуют особые ограничения, накладываемые на использование cookies. Во-первых, браузер 
не может иметь более 300 cookies и более 20 cookies на один сервер. Во-вторых, cookies посылаются
только тем серверам, которым разрешено их получать.</p>
<p>В cookies задаются следующие параметры:</p>
<UL>
  <LI>Время истечения срока годности. По умолчанию cookies существуют до момента закрытия 
  браузера. (Например, 01/10/2002, 18:00:00)</LI>
  <LI>Информация о пути. Указывает каталоги на сервере, для которых действует cookie. По 
  умолчанию указывает все каталоги сервера.</LI>
  <LI>Информация о домене. В cookie можно настроить имена доменов, для которых они будут 
  посылаться. По умолчанию устанавливается домен сервера, установившего cookie.</LI>
  <LI>Параметр защиты. Сookies могут посылаться как по защищенным, так и по открытым каналам. 
  По умолчанию - по открытому каналу, но если параметр защиты включен, будут отправляться 
  по защищенным каналам (т.е. через протокол HTTPS).</LI>
</UL>
<p>Чтобы установить cookie используется функция <EM>setcookie</EM>.</p>
<pre>
int setcookie (string name, string [value], 
		int [expire], string [path], 
		string [domain], int [secure])
</pre>
<p>Где первый параметр - имя cookie. <EM>value</EM> - значение, соответствующее этому cookie. 
 Третий параметр - время жизни cookie (устанавливается при помощи функций <EM>time()</EM> либо 
 <EM>mktime()</EM>). Четвертый параметр - информация о пути. <EM>domain</EM>
 - имя домена, и <EM>secure</EM> - параметр защиты (если установлен в 1, cookie посылается 
 по защищенному каналу).</p>
<p>Необходимо помнить, что функция <EM>setcookie</EM> должна находиться в самом начале 
страницы, так как любое содержание, предшествующее тегу РНР, приводит к возникновению ошибки 
при работе с cookies.
</p>
<pre>
&lt;?php
	$cook++;
	setcookie("cook", $cook, mktime(18,0,0,10,31,2002));
	//истекает 31 ноября 2002 года в 18:00:00 
	echo "Hello! You were here ".$cook;
?&gt;
</pre>
<p>Приведенный выше пример определяет сколько раз пользователь посещал данный сайт. Важно 
помнить, что cookie и соответствующая переменная (в нашем случае "cook" и $cook) доступны 
только в том случае, если клиент принимает и возвращает cookie обратно серверу.</p>
<p>Доступ к cookie происходит через глобальную переменную с таким же
именем, как и у cookie. Но это не единственный способ доступа к cookie. Второй способ - 
это доступ через глобальный массив $HTTP_COOKIE_VARS, который хранит только переменные, 
связанные с cookies.</p>
<PRE>
echo $HTTP_COOKIE_VARS["cook"];
</PRE>
<p>Кроме всего прочего, у Вас есть еще возможность в одном cookie сохранить несколько 
значений. Для этого cookie рассматривается как массив, и всем элементам этого массива 
присваиваются значения.</p>
<pre>
$name = "Vasya";
if(!isset($ArrCook[0])){
	setcookie("ArrCook[0]", $name);
}
if(!isset($ArrCook[1])){
	$ArrCook[1] = 0;
}
$ArrCook[1]++;
setcookie("ArrCook[1]", $ArrCook[1]);

echo "Hello, ".$ArrCook[0]." you were here ".$ArrCook[1]." times!";
</pre>

</Урок>