<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Списки. Класс CListBox" 
предыдущий="section0.xml" следующий="section02.xml">


<h1 style="color:maroon">Особенности синтаксиса языка SQL в СУБД MySQL. Функции.</h1>

<p>MySQL обладает некоторыми витиеватыми расширениями, аналогов которым вы не найдете в других базах данных. Большинство расширений, имеющихся в MySQL, в целом согласуется со стандартом ANSI SQL. </p>
<p>MySQL предоставляет возможность работы с функциями. Функции в SQL аналогичны функциям в других языках программирования, таким как C. В MySQL в команде SELECT функции могут использоваться в двух местах:</p>
<p><i>Как извлекаемая величина</i></p>
<p>В этом случае функция включается в список извлекаемых колонок. Возвращаемое функцией значение, вычисляемое для каждой выбранной строки, включается в возвращаемое результирующее множество, как если бы это была колонка базы данных. Вот пример:</p>
<pre>
SELECT title, text, LENGTH(text)
FROM papers
WHERE author = 'Sergey Zelinsky'
</pre>
<p>Данный пример позволяет выбрать заглавие статьи, полный текст ее,
и длину (в байтах) полного текста для всех статей, автор которых Сергей Зелинский.
Функция LENGTH() возвращает длину заданной строки в символах.</p>
<p><i>Как часть предложения WHERE</i></p>
<p>В этом виде функция заменяет место константы при вычислении в предложении WHERE. Значение функции используется при сравнении в каждой строке таблицы.</p>
<p>В MySQL используются следующие функции:</p>
<p>Математические функции.</p>
<TABLE>
<TR><TD>ABS()</TD>
<TD>Абсолютное значение (модуль числа).</TD></TR>
<TR><TD>CEILING()</TD>
<TD>( )</TD></TR>
<TR><TD>EXP()</TD>
<TD>Экспонента.</TD></TR>
<TR><TD>FORMAT(nr,NUM)</TD>
<TD>Форматирует число в формат '#,###,###.##' с NUM десятичных цифр.</TD>
</TR>
<TR><TD>LOG()</TD>
<TD>Логарифм.</TD></TR>
<TR><TD>LOG10()</TD>
<TD>Логарифм по основанию 10.</TD></TR>
<TR><TD>MIN(),MAX()</TD>
<TD>Минимум или максимум соответственно. Должна иметь при вызове два или
    более аргументов, иначе рассматривается как групповая функция.</TD></TR>
<TR><TD>MOD()</TD>
<TD>Остаток от деления (аналог %).</TD></TR>
<TR><TD>POW()</TD>
<TD>Степень.</TD></TR>
<TR><TD>ROUND()</TD>
<TD>Округление до ближайшего целого числа.</TD></TR>
<TR><TD>RAND([integer_expr])</TD>
<TD>Случайное число типа float, 0 &lt;= x &lt;= 1.0, используется
    integer_expr как значение для запуска генератора.</TD></TR>
<TR><TD>SQRT()</TD>
<TD>Квадратный корень.</TD></TR></TABLE>

<p>Строковые функции.</p>

<TABLE>
<TR><TD>CONCAT()</TD>
<TD>Объединение строк.</TD></TR>
<TR><TD>INTERVAL(A,a,b,c,d)</TD>
<TD>Возвращает 1, если A == a, 2, если A == b...  Если совпадений нет,
    вернет 0. A,a,b,c,d... строки.</TD></TR>
<TR><TD>INSERT(org,strt,len,new)</TD>
<TD>Заменяет подстроку org[strt...len(gth)] на new. Первая позиция строки=1.
</TD></TR>
<TR><TD>LCASE(A)</TD>
<TD>Приводит A к нижнему регистру.</TD></TR>
<TR><TD>LEFT()</TD>
<TD>Возвращает строку символов, отсчитывая слева.</TD></TR>
<TR><TD>LENGTH()</TD>
<TD>Длина строки.</TD></TR>
<TR><TD>LOCATE(A,B)</TD>
<TD>Позиция подстроки B в строке A.</TD></TR>
<TR><TD>LOCATE(A,B,C)</TD>
<TD>Позиция подстроки B в строке A, начиная с позиции C.</TD></TR>
<TR><TD>LTRIM(str)</TD>
<TD>Удаляет все начальные пробелы из строки str.</TD></TR>
<TR><TD>REPLACE(A,B,C)</TD>
<TD>Заменяет все подстроки B в строке A на подстроку C.</TD></TR>
<TR><TD>RIGHT()</TD>
<TD>Возвращает длину строки.</TD></TR>
<TR><TD>RTRIM(str)</TD>
<TD>Удаляет хвостовые пробелы из строки str.</TD></TR>
<TR><TD>STRCMP()</TD>
<TD>Возвращает 0, если строки одинаковые.</TD></TR>
<TR><TD>SUBSTRING(A,B,C)</TD>
<TD>Возвращает подстроку из A, с позиции B до позиции C.</TD></TR>
<TR><TD>UCASE(A)</TD>
<TD>Переводит A в верхний регистр.</TD></TR></TABLE>

<p>И наконец несколько просто полезных функций.</p>

<TABLE>
<TR><TD>CURDATE()</TD>
<TD>Текущая дата.</TD></TR>
<TR><TD>DATABASE()</TD>
<TD>Имя текущей базы данных из которой выполняется выбор.</TD></TR>
<TR><TD>FROM_DAYS()</TD>
<TD>Меняет день на DATE.</TD></TR>
<TR><TD>NOW()</TD>
<TD>Текущее время в форматах YYYYMMDDHHMMSS или "YYYY-MM-DD HH:MM:SS". Формат
    зависит от того в каком контексте используется NOW(): числовом или
    строковом.</TD></TR>
<TR><TD>PASSWORD()</TD>
<TD>Шифрует строку.</TD></TR>
<TR><TD>PERIOD_ADD(P:N)</TD>
<TD>Добавить N месяцев к периоду P (в формате YYMM).</TD></TR>
<TR><TD>PERIOD_DIFF(A,B)</TD>
<TD>Возвращает месяцы между A и B. Обратите внимание, что PERIOD_DIFF
    работает только с датами в форме YYMM или YYYMM.</TD></TR>
<TR><TD>TO_DAYS()</TD>
<TD>Меняет DATE (YYMMDD) на номер дня.</TD></TR>
<TR><TD>UNIX_TIMESTAMP([<I>date</I>])</TD>
<TD>Возвращает метку времени unix, если вызвана без <I>date</I> (секунды,
    начиная с GMT 1970.01.01 00:00:00). При вызове со столбцом TIMESTAMP
    вернет TIMESTAMP.
    <I>date</I> может быть также строкой DATE, DATETIME или числом в
    формате YYMMDD (или YYYMMDD).</TD></TR>
<TR><TD>USER()</TD>
<TD>Возвращает логин текущего пользователя.</TD></TR>
<TR><TD>WEEKDAY()</TD>
<TD>Возвращает день недели (0 = понедельник, 1 = вторник, ...).</TD></TR>
</TABLE>


</Урок>