<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Комбинированные списки. Класс CComboBox" 
предыдущий="section01.xml" следующий="HomeTask.xml" >

<h1 style="color:maroon">Особенности синтаксиса языка SQL в СУБД MySQL. Операторы.</h1>

<p><b>GRANT</b></p>
<pre>
GRANT privilege [ (column, ...) ] [, privilege [( column, ...) ] ...]
ON {table} TO user [IDENTIFIED BY 'password']
[, user [IDENTIFIED BY 'password'] ...] [WITH GRANT OPTION]
</pre>
<p>До версии MySQL 3.22.11, оператор GRANT распознавался, но не выполнялся. В текущих версиях функциональность присутствует. Этот оператор даёт пользователю (или пользователям) права доступа. Возможно предоставление прав доступа на БД, таблицу или на отдельный столбец. Параметр table может быть указан как имя таблицы в текущей БД; как '*', тогда будут предоставлены права на все таблицы текущей БД; как '*.*' - права на все таблицы во всех имеющихся БД; или как 'database.*' что будет иметь эффект для всех таблиц указанной БД.</p>
<p>В настоящий момент поддерживаются следующие права:</p>
<p><i>ALL PRIVILEDGES/ALL </i>Все права доступа</p>
<p><i>ALTER </i>Изменение структуры таблиц.</p>
<p><i>CREATE </i>Создание новых таблиц</p>
<p><i>DELETE </i>Удаление записей из таблиц</p>
<p><i>DROP </i>Удаление таблиц целиком</p>
<p><i>FILE </i>Создание и удаление целых БД, а также управление файлами журналов.</p>
<p><i>INDEX </i>Создание и удаление индексов в таблицах</p>
<p><i>INSERT </i>Ввод данных в таблицы</p>
<p><i>PROCESS </i>Завершение потоков </p>
<p><i>RELOAD </i>Обновление различных внутренних таблиц (см. оператор FLUSH)</p>
<p><i>SELECT </i>Чтение данных из таблицы</p>
<p><i>SHUTDOWN </i>Выключение (Shut down) сервера БД. </p>
<p><i>UPDATE </i>Модификация записей внутри таблиц</p>
<p><i>USAGE </i>Нет никаких прав</p>
<p>Переменная user имеет вид: user@hostname (ползователь@имя хоста). И user и hostname могут включать в себя знаки подстановки SQL. При их использовании должно быть заключено в кавычки либо полностью имя, либо, только часть с подстановочными знаками (например, joe@"%.com" и "joe@%.com" одинаково правильны). Использование user без hostname равносильно использованию user@"%".</p>
<p>Если у Вас есть право GRANT, вы можете указать необязательный параметр INDENTIFIED BY. В случае если описываемого пользователя не существует, он будет создан вместе с указанным паролем. Иначе будет изменён пароль существующего пользователя.</p>
<p>Право GRANT задаётся с помощью спецификатора WITH GRANT OPTION. После его выполнения пользователь сможет предоставить любое из имеющихся у него прав другому пользователю.</p>

<p><b>SHOW</b></p>
<pre>
SHOW DATABASES [LIKE ...]
SHOW KEYS FROM table_name
SHOW TABLES [FROM database] [LIKE ...]
SHOW [COLUMNS|FIELDS] FROM table [FROM database] [LIKE ...] 
</pre>
<p>Выводит различную информацию о системе MySQL. Выражение можно использовать для выяснения статуса или структуры практически любой части. Приведем примеры:</p>
<pre>
# Показать все доступные БД.
SHOW DATABASES

# Показать информацию об индексах таблицы'bigdata'
SHOW KEYS FROM bigdata

# Показать информацию об индексах в таблице 'bigdata' в БД 'mydata'
SHOW INDEX FROM bigdata FROM mydata

# Показать все доступные таблицы из БД 'mydata', начинающиеся с 
# буквы'z'
SHOW TABLES FROM mydata LIKE 'z%'

# Выдать информацию обо всех столбцах таблицы 'skates'
SHOW COLUMNS FROM stakes

# Выдать информацию обо всех столбцах таблицы 'people', с именами 
# кончающимися на '_name'
SHOW FIELDS FROM people LIKE '%\_name'

# Показать информацию о состоянии сервера
SHOW STATUS

# Показать системные переменные
SHOW VARIABLES
</pre>

<p><b>DESCRIBE</b></p>
<pre>
(DESCRIBE | DESC) table [column] 
</pre>
<p>Описывает таблицу или столбец. Эта команда подобна команде SHOW. Параметр [column] может быть именем столбца или строкой. Если [column] - строка, он может содержать символы подстановки. </p>

<p><b>EXPLAIN</b></p>
<pre>
EXPLAIN SELECT команда 
</pre>
<p>Выводит информацию о структуре и порядке выполнения запроса SELECT.. Это может быть полезным для определения эффективности использования ключей.</p>

<p><b>FLUSH</b></p>
<pre>
FLUSH option[, option...]
</pre>
<p>Перезапускает различные внутренние процессы или сбрасывает данные на диск, в зависимости от указанного параметра. Для выполнения этой операции необходимо иметь право reload.
Допустимы следующие параметры:</p>
<p><i>HOSTS </i>
Обнуляет таблицу в кэше, хранящую информацию об именах клиентских хостов. Этот параметр следует использовать, если клиент поменял IP адрес или есть ошибки касающиеся установки связи с хостом. </p>
<p><i>LOGS </i>
Закрывает все обычные файлы журналов и открывает их заново. Используется при смене номера индексного дескриптора. Если обновлённому журналу не дано особое расширение, новый файл будет иметь расширение увеличенное на единицу. </p>
<p><i>PRIVILEGES </i>
Перезагружает все внутренние таблицы разрешений MySQL. Это делается для вступления в силу любых изменений сделанных в этих таблицах</p>
<p><i>STATUS </i>
Обнуляет все переменные, которые следят за состоянием сервера.</p>
<p><i>TABLES </i>
Закрывает все открытые таблицы и сбрасывает все кэшированные данные на диск.</p>

<p><b>REPLACE</b></p>
<pre>
REPLACE INTO table [(column, ...)] VALUES (value, ...)REPLACE INTO table [(column, ...)] SELECT select_clause 
</pre>
<p>Вводит данные в таблицу, заменяя, при этом, все записи вызывающие конфликт. Этот оператор аналогичен INSERT за исключением того, что при конфликте нового значения с существующим уникальным ключом, новое значение будет записано вместо старого. Первый вариант оператора просто вставит указанные значения в указанные поля. Поля, значения которых не указаны, получат значение по умолчанию либо NULL. Второй вариант вставляет в таблицу данные, полученные в результате запроса SELECT. Вот пример:</p>
<pre>
REPLACE INTO people ( name, rank, serial_number ) VALUES ( 'Bob Smith',
'Captain', 12345 )
</pre>

<p><b>LIMIT</b></p>
<pre>
LIMIT [start,] rows 
</pre>
<p>Возвращает только указанное количество записей. Значение start (необязательное) указывает на количество записей, которое надо пропустить перед выборкой данных. Нумерация записей начинается с нуля. </p>


</Урок>