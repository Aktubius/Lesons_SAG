<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ////////////////////////
</value>
  </data>
</root>