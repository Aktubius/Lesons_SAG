//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoneyConvertClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AppWithStandAloneServerAndClient.WCF_Serv" +
        "er.Service")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MesssageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Messsage {
            get {
                return this.MesssageField;
            }
            set {
                if ((object.ReferenceEquals(this.MesssageField, value) != true)) {
                    this.MesssageField = value;
                    this.RaisePropertyChanged("Messsage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CurrencyList", Namespace="http://schemas.datacontract.org/2004/07/AppWithStandAloneServerAndClient.WCF_Serv" +
        "er.Service", ItemName="string")]
    [System.SerializableAttribute()]
    public class CurrencyList : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMoneyConverter")]
    public interface IMoneyConverter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyConverter/Convert", ReplyAction="http://tempuri.org/IMoneyConverter/ConvertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MoneyConvertClient.ServiceReference.ServiceFault), Action="http://tempuri.org/IMoneyConverter/ConvertServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AppWithStandAloneServerAndClient.WCF_Serv" +
            "er.Service")]
        double Convert(string fromCurrencyCode, string toCurrencyCode, double amount, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMoneyConverter/GetCurrentcyList", ReplyAction="http://tempuri.org/IMoneyConverter/GetCurrentcyListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MoneyConvertClient.ServiceReference.ServiceFault), Action="http://tempuri.org/IMoneyConverter/GetCurrentcyListServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AppWithStandAloneServerAndClient.WCF_Serv" +
            "er.Service")]
        MoneyConvertClient.ServiceReference.CurrencyList GetCurrentcyList();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoneyConverterChannel : MoneyConvertClient.ServiceReference.IMoneyConverter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoneyConverterClient : System.ServiceModel.ClientBase<MoneyConvertClient.ServiceReference.IMoneyConverter>, MoneyConvertClient.ServiceReference.IMoneyConverter {
        
        public MoneyConverterClient() {
        }
        
        public MoneyConverterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MoneyConverterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoneyConverterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoneyConverterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Convert(string fromCurrencyCode, string toCurrencyCode, double amount, System.DateTime date) {
            return base.Channel.Convert(fromCurrencyCode, toCurrencyCode, amount, date);
        }
        
        public MoneyConvertClient.ServiceReference.CurrencyList GetCurrentcyList() {
            return base.Channel.GetCurrentcyList();
        }
    }
}
