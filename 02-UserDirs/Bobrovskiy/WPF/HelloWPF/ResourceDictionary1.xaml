<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Reveal="clr-namespace:Reveal;assembly=Reveal">
	<!-- Resource dictionary entries should be defined here. -->

	<!-- Disabled Brushes are used for the Disabled look of each control -->
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
        
	<!-- Expander -->
	
	<Style TargetType="{x:Type Control}" x:Key="EmptyFocusVisualStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate/>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- NormalBrush is used as the Background for SimpleButton, SimpleRepeatButton -->
	<LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#EEE" Offset="0.0"/>
		<GradientStop Color="#CCC" Offset="1.0"/>
	</LinearGradientBrush>


	<!-- Simple Expander ToggleButton - This Button is used by the Expander control. 
	When it is toggled it switches visibility on the Up_Arrow and Down_Arrow -->
	
	<ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Rectangle Margin="0,0,0,0"
				 x:Name="Rectangle" 
				 Fill="Transparent" 
				 Stroke="{DynamicResource NormalBorderBrush}"
				 RadiusX="17" RadiusY="17"/>
				 
			<Path HorizontalAlignment="Center" 
				x:Name="Up_Arrow" 
				VerticalAlignment="Center" 
				Fill="{DynamicResource GlyphBrush}" 
				Data="M 1 -1 L 9 4 L 1 9 Z"/>				
				
			<Path Visibility="Collapsed" 
				HorizontalAlignment="Center" 
				x:Name="Down_Arrow" 
				VerticalAlignment="Center" 
				Fill="{DynamicResource GlyphBrush}" 
				Data="M 3 -1 L -4 4 L 3 9 Z"/>
		</Grid>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
				<Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" Value="Visible" TargetName="Down_Arrow"/>
				<Setter Property="Visibility" Value="Collapsed" TargetName="Up_Arrow"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
				<Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>
				<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
				<Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Up_Arrow"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    
	<!-- MouseOverBrush is used for MouseOver in Button, Radio Button, CheckBox -->
	<LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF" Offset="0.0"/>
		<GradientStop Color="#AAA" Offset="1.0"/>
	</LinearGradientBrush>

	<!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
	<LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#BBB" Offset="0.0"/>
		<GradientStop Color="#EEE" Offset="0.1"/>
		<GradientStop Color="#EEE" Offset="0.9"/>
		<GradientStop Color="#FFF" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>

	<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#CCC" Offset="0.0"/>
		<GradientStop Color="#444" Offset="1.0"/>
	</LinearGradientBrush>


	<!-- Used for Checkmark, Radio button, TreeViewItem, Expander ToggleButton glyphs -->
	<SolidColorBrush x:Key="GlyphBrush" Color="#444"/>

	<!-- Simple Expander 
	 This uses the Simpler ExpanderToggleButton. It sets Visibility on the ContentPresenter to expand
	 Limitations : The Simple Expander only expands down -->
	<Style x:Key="SimpleExpander" TargetType="{x:Type Expander}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="0" 
							x:Name="Border" 
							Background="{TemplateBinding Background}" 
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							CornerRadius="2,2,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<ToggleButton 
									Template="{DynamicResource ExpanderToggleButton}" 
									FocusVisualStyle="{StaticResource EmptyFocusVisualStyle}"
									Background="{DynamicResource NormalBrush}"
									IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									OverridesDefaultStyle="True"
									HorizontalAlignment="Center" 
									VerticalAlignment="Center" 
									Width="20" Height="20"/>
								
								<ContentPresenter Grid.Column="1" 
									Margin="4" 
									RecognizesAccessKey="True" 
									ContentSource="Header"/>
							</Grid>
						</Border>
                        
						<Reveal:Reveal IsExpanded="False" Grid.Row="1" x:Name="ExpandSite">
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
						</Reveal:Reveal>
                        
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter 
							TargetName="ExpandSite" 
							Property="IsExpanded" 
							Value="True"/>
						</Trigger>
						<Trigger 
							Property="IsEnabled"
						 	Value="False">
							<Setter 
								TargetName="ExpandSite" 
								Property="IsExpanded" 
								Value="False"/>
						</Trigger>
						<Trigger 
							Property="IsEnabled"
						 	Value="False">
							<Setter 
								Property="Foreground"
								Value="{DynamicResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>